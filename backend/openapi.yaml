openapi: 3.0.0
info:
  title: API de Avaliação de Filmes
  version: 1.0.0
  description: |
    Documentação dos endpoints disponíveis:
    - `/api/auth/signup`
    - `/api/auth/signin`
    - `/api/auth/forgot-password`
    - `/api/auth/reset-password/{token}`
    - `/api/v1/movies/genres`
    - `/api/v1/movies/discover`
    - `/api/v1/movies/{id}`
    - `/api/v1/movies/search`
    - `/api/v1/movies/{id}/ratings`
    - `/api/v1/:movieId/reviews`
    - `/api/v1/reviews/:id`
    - `/api/v1/me/reviews`

servers:
  - url: http://localhost:3333
    description: Servidor local

paths:
  /api/auth/signup:
    post:
      summary: Registra um novo usuário
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    type: object
        '409':
          description: Usuário já possui cadastro
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Usuário já possui cadastro"
        '500':
          description: Erro inesperado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro ao criar user"

  /api/auth/signin:
    post:
      summary: Faz login e retorna token JWT
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInInput'
      responses:
        '200':
          description: Autenticação bem-sucedida
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Usuário não encontrado"
        '400':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Senha incorreta"
        '500':
          description: Erro inesperado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"
                    

  /api/auth/forgot-password:
    post:
      summary: Solicita recuperação de senha (envia e-mail com token)
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordInput'
      responses:
        '200':
          description: E-mail de recuperação enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Email enviado com sucesso"
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Usuário não encontrado"
        '500':
          description: Erro inesperado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

  /api/auth/reset-password/{token}:
    post:
      summary: Reseta a senha usando token válido
      tags:
        - Auth
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: Token recebido por e-mail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordInput'
      responses:
        '200':
          description: Senha alterada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Senha alterada com sucesso"
        '400':
          description: Token inválido ou expirado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Token não encontrado ou inválido"
        '500':
          description: Erro inesperado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

  /api/v1/movies/genres:
    get:
      summary: Lista gêneros de filmes (TMDb)
      tags:
        - Movies
      responses:
        '200':
          description: Lista de gêneros retornada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  genres:
                    type: array
                    items:
                      $ref: '#/components/schemas/Genre'
        '500':
          description: Erro interno ao buscar gêneros
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro ao buscar gêneros"

  /api/v1/movies/discover:
    get:
      summary: Descobre filmes por gênero e/ou ano
      tags:
        - Movies
      parameters:
        - in: query
          name: genre
          schema:
            type: integer
          description: ID do gênero (opcional)
        - in: query
          name: year
          schema:
            type: integer
          description: Ano de lançamento (opcional)
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Página de resultados (opcional
      responses:
        '200':
          description: Lista de filmes retornada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  genres:
                    type: array
                    items:
                      $ref: '#/components/schemas/MovieResponse'
        '500':
          description: Erro interno ao buscar filmes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro ao buscar filmes"

  /api/v1/movies/{id}:
    get:
      summary: Retorna detalhes de um filme específico
      tags:
        - Movies
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do filme no TMDb
      responses:
        '200':
          description: Detalhes do filme retornados com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  movie:
                    $ref: '#/components/schemas/MovieResponse'
        '404':
          description: Filme não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Filme não encontrado"
        '500':
          description: Erro interno ao obter detalhes do filme
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

  /api/v1/movies/search:
    get:
      summary: Busca filmes por texto
      tags:
        - Movies
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Termo de busca
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Página de resultados (opcional)
      responses:
        '200':
          description: Resultados da pesquisa retornados com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/MovieResponse'
        '500':
          description: Erro interno ao buscar filmes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor ao buscar filmes"
  /api/v1/movies/{id}/ratings:
    get:
      summary: Obtém média e quantidade de avaliações de um filme
      tags:
        - Movies
      parameters:
        - in: path
          name: movieId
          required: true
          schema:
            type: integer
          description: ID do filme no TMDb
      responses:
        '200':
          description: Estatísticas de rating retornadas com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  stats:
                    $ref: '#/components/schemas/RatingStats'
        '400':
          description: movieId inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Id do filme é inválido"
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

                
  /api/v1/{movieId}/reviews:
    post:
      summary: Cria uma nova review para um filme
      tags:
        - Reviews
      parameters:
        - in: path
          name: movieId
          required: true
          schema:
            type: integer
          description: ID do filme no TMDb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReviewInput'
      responses:
        '201':
          description: Review criada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  review:
                    $ref: '#/components/schemas/Review'
        '400':
          description: Dados inválidos ou já existe review
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Você já avaliou este filme"
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Token inválido"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

    get:
      summary: Lista todas as reviews de um filme
      tags:
        - Reviews
      parameters:
        - in: path
          name: movieId
          required: true
          schema:
            type: integer
          description: ID do filme no TMDb
      responses:
        '200':
          description: Reviews retornadas com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        '400':
          description: movieId inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Id do filme é inválido"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

  /api/v1/reviews/{id}:
    patch:
      summary: Atualiza uma review existente
      tags:
        - Reviews
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID da review (MongoDB ObjectId)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReviewInput'
      responses:
        '200':
          description: Review atualizada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  review:
                    $ref: '#/components/schemas/Review'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "rating ou content deve ser informado"
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Token inválido"
        '403':
          description: Não autorizado (não é o autor)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Não autorizado"
        '404':
          description: Review não encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Review não encontrado"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

    delete:
      summary: Exclui uma review existente
      tags:
        - Reviews
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID da review (MongoDB ObjectId)
      responses:
        '200':
          description: Review excluída com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Review excluído"
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Token inválido"
        '403':
          description: Não autorizado (não é o autor)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Não autorizado"
        '404':
          description: Review não encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Review não encontrado"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

  /api/v1/me/reviews:
    get:
      summary: Lista as reviews do usuário autenticado
      tags:
        - Reviews
      security:
        - bearerAuth: []  
      responses:
        '200':
          description: Lista de avaliações do usuário
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserReview'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Token inválido"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno do servidor"

components:
  schemas:
    CreateUserInput:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          minLength: 2
          example: João Silva
        email:
          type: string
          format: email
          example: joao@exemplo.com
        password:
          type: string
          minLength: 8
          format: password
          example: senha123

    SignInInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: joao@exemplo.com
        password:
          type: string
          minLength: 8
          format: password
          example: senha123

    ForgotPasswordInput:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          example: joao@exemplo.com

    ResetPasswordInput:
      type: object
      required:
        - password
      properties:
        password:
          type: string
          minLength: 8
          format: password
          example: novaSenha123

    RatingStats:
      type: object
      properties:
        average:
          type: number
          format: float
          description: Média das notas dos usuários
          example: 4.25
        count:
          type: integer
          description: Quantidade total de avaliações
          example: 12

    CreateReviewInput:
      type: object
      required:
        - rating
        - content
      properties:
        rating:
          type: number
          minimum: 1
          maximum: 5
          example: 4
        content:
          type: string
          example: "Ótimo filme, super recomendo!"

    UpdateReviewInput:
      type: object
      properties:
        rating:
          type: number
          minimum: 1
          maximum: 5
          example: 5
        content:
          type: string
          example: "Atualizando meu comentário"

    Genre:
      type: object
      properties:
        id:
          type: integer
          example: 28
        name:
          type: string
          example: Ação

    MovieResponse:
      type: object
      properties:
        id:
          type: integer
          example: 550
        title:
          type: string
          example: Clube da Luta
        overview:
          type: string
          example: Um narrador insone encontra Tyler Durden...
        posterUrl:
          type: string
          nullable: true
          example: https://image.tmdb.org/t/p/w500/a26cQPRhJPX6GbWfQbvZdrrp9j9.jpg
        backdropUrl:
          type: string
          nullable: true
          example: https://image.tmdb.org/t/p/w500/path/to/backdrop.jpg
        genres:
          type: array
          items:
            type: string
            example: Drama
        releaseDate:
          type: string
          example: 1999-10-15
        runtime:
          type: integer
          nullable: true
          example: 139

    Review:
      type: object
      properties:
        _id:
          type: string
          example: "684c457ecefa4063ee347a14"
        movieId:
          type: integer
          example: 550
        author:
          type: string
          example: "605c5f2f1c4a4e2b3c4d5e6f"
        rating:
          type: number
          example: 4
        content:
          type: string
          example: "Ótima avaliação!"
        createdAt:
          type: string
          format: date-time
          example: "2025-06-15T12:34:56.789Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-06-15T12:34:56.789Z"

    UserReview:
      type: object
      properties:
        _id:
          type: string
          description: ID da review (MongoDB ObjectId)
          example: "60d21b4667d0d8992e610c85"
        rating:
          type: integer
          description: Nota dada à revisão
          example: 4
        content:
          type: string
          description: Texto da revisão
          example: "Ótimo filme, recomendo!"
        createdAt:
          type: string
          format: date-time
          description: Data de criação da review
          example: "2025-06-23T18:25:43.511Z"
        updatedAt:
          type: string
          format: date-time
          description: Data da última atualização da review
          example: "2025-06-24T10:12:17.123Z"
        movie:
          type: object
          description: Informações básicas do filme avaliado
          properties:
            id:
              type: integer
              description: ID do filme no TMDb
              example: 550
            title:
              type: string
              description: Título do filme
              example: "Fight Club"




